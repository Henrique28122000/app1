name: Monitorar PDF e responder mensagens

on:
  schedule:
    - cron: "*/5 * * * *"  # executa a cada 5 minutos
  workflow_dispatch:

jobs:
  monitorar:
    runs-on: ubuntu-latest
    steps:
      - name: Baixar depend√™ncias
        run: pip install requests

      - name: Executar script de monitoramento
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          import requests, hashlib, os, json

          FILE_URL = "https://cetredeneoconcursos.com.br/Concursos_PDF/093_Concurso/093_Concurso093.pdf"
          TOKEN = os.environ["5600089920:AAE58XD5WFIKwfSJy1KERw5CGwvFHFYmjvE"]
          CHAT_ID = os.environ["5060246658"]
          STATE_FILE = "state.json"

          def get_hash():
              r = requests.get(FILE_URL, timeout=20)
              if r.status_code == 200:
                  return hashlib.md5(r.content).hexdigest()
              return None

          def send_message(text):
              requests.post(f"https://api.telegram.org/bot{TOKEN}/sendMessage",
                            data={"chat_id": CHAT_ID, "text": text})

          def check_new_messages():
              r = requests.get(f"https://api.telegram.org/bot{TOKEN}/getUpdates").json()
              if "result" in r:
                  for update in r["result"]:
                      if "message" in update:
                          text = update["message"]["text"].lower()
                          if text in ["oi", "ol√°", "ola", "salve"]:
                              send_message("üëã Oi! Estou monitorando o arquivo do concurso pra voc√™.")
                          elif "pdf" in text:
                              send_message(f"üìÑ Link do arquivo: {FILE_URL}")
                          else:
                              send_message("ü§ñ Comando n√£o reconhecido, mas estou de olho no PDF pra voc√™!")

          def main():
              check_new_messages()
              current_hash = get_hash()
              if not current_hash:
                  send_message("‚ö†Ô∏è Erro ao acessar o PDF.")
                  return
              if os.path.exists(STATE_FILE):
                  last_hash = json.load(open(STATE_FILE))["hash"]
              else:
                  last_hash = None

              if last_hash != current_hash:
                  send_message(f"üö® O arquivo foi atualizado!\n{FILE_URL}")
              json.dump({"hash": current_hash}, open(STATE_FILE, "w"))

          main()
